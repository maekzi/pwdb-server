// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model User {
  id                             String       @id @default(cuid())
  name                           String       @default("")
  email                          String       @unique @default("")
  password                       String
  role                           Role?        @relation("User_role", fields: [roleId], references: [id])
  roleId                         String?      @map("role")
  from_Project_created_by        Project[]    @relation("Project_created_by")
  from_Credential_lastUpdated_by Credential[] @relation("Credential_lastUpdated_by")
  from_Credential_created_by     Credential[] @relation("Credential_created_by")

  @@index([roleId])
}

model Project {
  id             String       @id @default(cuid())
  name           String       @default("")
  desciption     String       @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  jiraLink       String       @default("")
  gitlabLink     String       @default("")
  confluenceLink String       @default("")
  credentials    Credential[] @relation("Credential_assignedTo")
  created_by     User?        @relation("Project_created_by", fields: [created_byId], references: [id])
  created_byId   String?      @map("created_by")
  created_at     DateTime     @default(now())

  @@index([created_byId])
}

model Credential {
  id               String   @id @default(cuid())
  name             String   @default("")
  type             String
  enviroment       String
  user             String   @default("")
  password         String   @default("")
  url              String   @default("")
  info             String   @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  assignedTo       Project? @relation("Credential_assignedTo", fields: [assignedToId], references: [id])
  assignedToId     String?  @map("assignedTo")
  lastUpdated_by   User?    @relation("Credential_lastUpdated_by", fields: [lastUpdated_byId], references: [id])
  lastUpdated_byId String?  @map("lastUpdated_by")
  lastUpdated_at   DateTime @default(now()) @updatedAt
  created_by       User?    @relation("Credential_created_by", fields: [created_byId], references: [id])
  created_byId     String?  @map("created_by")
  created_at       DateTime @default(now())

  @@index([assignedToId])
  @@index([lastUpdated_byId])
  @@index([lastUpdated_at])
  @@index([created_byId])
}

model Role {
  id                   String  @id @default(cuid())
  name                 String  @unique @default("")
  canSeeOtherUsers     Boolean @default(false)
  canManageUsers       Boolean @default(false)
  canManageRoles       Boolean @default(false)
  canManageProjects    Boolean @default(false)
  canDeleteProjects    Boolean @default(false)
  canManageCredentials Boolean @default(false)
  canDeleteCredentials Boolean @default(false)
  assignedTo           User[]  @relation("User_role")
}
